options(htmltools.dir.version = FALSE)
2+2
df <- read.csv("data.csv")
df$Location
df <- read.csv("data.csv")
library(tidyverse)
library(lingtypology)
df <- read.csv("data.csv")
df %>%
distinct(Language, Location, lon, lat) %>%
lingtypology::map.feature(.$Language)
df <- read_csv("data.csv")
df %>%
distinct(Language, Location, lon, lat) %>%
lingtypology::map.feature(.$Language)
df %>%
distinct(Language, Location, lon, lat) %>%
lingtypology::map.feature(.$Language,
longitude = .$lon,
latitude = .$lat)
library(lingtypology)
map.feature(df$Language,
longitude = df$lon,
latitude = df$lat)
df %>%
distinct(Language, Location, lon, lat) ->
df
map.feature(df$Language,
longitude = df$lon,
latitude = df$lat)
df <- read_csv("data.csv")
df %>%
distinct(Language, Location, lon, lat) ->
df
map.feature(df$Language,
longitude = df$lon,
latitude = df$lat)
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/Articles/2017 II VOT article/prezi for LAB/docs")
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(lingtypology)
library(ggjoy)
df <- read_csv("speakers.csv")
View(df)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
message=FALSE,
warning= FALSE,
fig.width=10.4,
fig.height=7)
library(tidyverse)
results <- read_tcv("result.tcv")
results <- read_tsv("result.tsv")
View(results)
results <- read_tsv("result.tsv")
View(results)
results <- read_tsv("result.tsv", col_names = FALSE)
colnames(results) <- c("speaker", "stimulus", "sound", "pronunciation", "s_parts", "duration", "start", "end")
View(results)
grepl(sound, "[auioe]"
)
results %>%
mutate(ifelse(grepl(sound, "[auioe]"), "vowel", "consonant"))
results %>%
mutate(type = ifelse(grepl(sound, "[auioe]"), "vowel", "consonant"))
results %>%
mutate(type = ifelse(grepl(sound, "[auioe]"), "vowel", "consonant"))
results %>%
mutate(type = ifelse(grepl(sound, "a"), "vowel", "consonant"))
linrary(sytingr)
library(sytingr)
library(stringr)
str_view_all(results$sound)
str_view_all(results$sound, "a")
results$sound
str_view_all(results$sound, "a")
results$sound
str_view_all(results$sound, "i")
str_view_all("aaaai", "i")
str_view_all(c("aaaai", "iuuu"), "i")
results$sound
str_view_all(results$sound, "b")
str_view_all(results$sound, "")
str_view_all(results$sound)
grep(results$sound, "b")
str_view_all(results$sound, "b")
View(results)
str_view_all("abba", "b")
str_view_all(letters, "b")
str_view_all(results$sound[1:10], "b")
str_view_all(results$sound[1:10], "a")
str_view_all(results$sound[1:10], "[aiuoe]")
grepl(results$sound[1:10], "[aiuoe]")
grep(results$sound[1:10], "[aiuoe]")
grep("[aiuoe]", results$sound[1:10])
results %>%
mutate(type = ifelse(grepl("a", sound), "vowel", "consonant"))
results %>%
mutate(type = ifelse(grepl("a", sound), "vowel", "consonant")) ->
results_n
View(results)
View(results_n)
results %>%
mutate(type = ifelse(grepl("aiuoe", sound), "vowel", "consonant")) ->
results_n
View(results_n)
results %>%
mutate(type = ifelse(grepl("[aiuoe]", sound), "vowel", "consonant")) ->
results_n
View(results_n)
results %>%
mutate(type = ifelse(grepl("[aiuoe]", sound), "vowel", "consonant")) %>%
mutate(type = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", type)) ->
results_n
View(results_n)
results %>%
mutate(type = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(type = ifelse(grepl("[aiuoe]", sound), "vowel", "consonant")) ->
results_n
results %>%
mutate(type = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(type = ifelse(grepl("[aiuoe]", sound), "vowel", type)) ->
results_n
View(results_n)
results %>%
mutate(type = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(type = ifelse(grepl("[aiuoe]", sound), "vowel", type)) %>%
mutate(voicing = ifelse(grepl("[bdgɡɢ]", sound), "voiced", "voiceless")) %>%
mutate(voicing = ifelse(type == "vowel", "vowel", voicing)) ->
results_n
View(results_n)
results %>%
mutate(type = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(type = ifelse(grepl("[aiuoe]", sound), "vowel", type)) %>%
mutate(voicing = ifelse(grepl("[bdgɡɢ]", sound), "voiced", "voiceless")) %>%
mutate(voicing = ifelse(type == "vowel", "vowel", voicing)) %>%
mutate(ejectiveness = ifelse(grepl("'", sound), "ejective", "")) %>%
mutate(geminate = ifelse(grepl("ː", sound), "geminate", "")) ->
results_n
View(results_n)
results %>%
mutate(type = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(type = ifelse(grepl("[aiuoe]", sound), "vowel", type)) %>%
mutate(voicing = ifelse(grepl("[bdgɡɢ]", sound), "voiced", "voiceless")) %>%
mutate(voicing = ifelse(type == "vowel", "vowel", voicing)) %>%
mutate(ejectiveness = ifelse(grepl("'", sound), "ejective", "")) %>%
mutate(geminate = ifelse(grepl("[:ː]", sound), "geminate", "")) ->
results_n
View(results_n)
results %>%
mutate(manner = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(manner = ifelse(grepl("[aiuoeɨ]", sound), "vowel", type)) %>%
mutate(type = ifelse(grepl("[bdgɡɢ]", sound), "voiced", "voiceless")) %>%
mutate(type = ifelse(type == "vowel", "vowel", voicing)) %>%
mutate(type = ifelse(grepl("'", sound), "ejective", type)) %>%
mutate(geminate = ifelse(grepl("[:ː]", sound), "geminate", "")) %>%
mutate(labialization = ifelse(grepl("ʷ", sound), "labialized", "")) %>%
mutate(pharyngealization = ifelse(grepl("ˤ", sound), "pharyngealized", "")) %>%
mutate(POA = ifelse(grepl("[bp]", sound), "labial", "")) %>%
mutate(POA = ifelse(grepl("[dts]", sound), "dental", POA)) ->
results_n
View(results_n)
results %>%
mutate(manner = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(manner = ifelse(grepl("[aiuoeɨ]", sound), "vowel", manner)) %>%
mutate(type = ifelse(grepl("[bdgɡɢ]", sound), "voiced", "voiceless")) %>%
mutate(type = ifelse(type == "vowel", "vowel", voicing)) %>%
mutate(type = ifelse(grepl("'", sound), "ejective", type)) %>%
mutate(geminate = ifelse(grepl("[:ː]", sound), "geminate", "")) %>%
mutate(labialization = ifelse(grepl("ʷ", sound), "labialized", "")) %>%
mutate(pharyngealization = ifelse(grepl("ˤ", sound), "pharyngealized", "")) %>%
mutate(POA = ifelse(grepl("[bp]", sound), "labial", "")) %>%
mutate(POA = ifelse(grepl("[dts]", sound), "dental", POA)) ->
results_n
results %>%
mutate(manner = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(manner = ifelse(grepl("[aiuoeɨ]", sound), "vowel", manner)) %>%
mutate(type = ifelse(grepl("[bdgɡɢ]", sound), "voiced", "voiceless")) %>%
mutate(type = ifelse(type == "vowel", "vowel", type)) %>%
mutate(type = ifelse(grepl("'", sound), "ejective", type)) %>%
mutate(geminate = ifelse(grepl("[:ː]", sound), "geminate", "")) %>%
mutate(labialization = ifelse(grepl("ʷ", sound), "labialized", "")) %>%
mutate(pharyngealization = ifelse(grepl("ˤ", sound), "pharyngealized", "")) %>%
mutate(POA = ifelse(grepl("[bp]", sound), "labial", "")) %>%
mutate(POA = ifelse(grepl("[dts]", sound), "dental", POA)) ->
results_n
View(results_n)
results %>%
mutate(POA = ifelse(grepl("[bp]", sound), "labial", "")) %>%
mutate(POA = ifelse(grepl("[dts]", sound), "dental", POA)) %>%
mutate(POA = ifelse(grepl("ɬ", sound), "lateral", POA)) %>%
mutate(POA = ifelse(grepl("tʃ|dʒ", sound), "postalveolar", POA)) %>%
mutate(POA = ifelse(grepl("[kgɡ]", sound), "velar", POA)) %>%
mutate(POA = ifelse(grepl("[qɢ]", sound), "uvular", POA)) %>%
mutate(manner = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(manner = ifelse(grepl("[aiuoeɨ]", sound), "vowel", manner)) %>%
mutate(type = ifelse(grepl("[bdgɡɢ]", sound), "voiced", "voiceless")) %>%
mutate(type = ifelse(type == "vowel", "vowel", type)) %>%
mutate(type = ifelse(grepl("'", sound), "ejective", type)) %>%
mutate(geminate = ifelse(grepl("[:ː]", sound), "geminate", "")) %>%
mutate(labialization = ifelse(grepl("ʷ", sound), "labialized", "")) %>%
mutate(pharyngealization = ifelse(grepl("ˤ", sound), "pharyngealized", "")) ->
results_n
View(results_n)
results <- read_tsv("result.tsv", col_names = FALSE)
results %>%
mutate(POA = ifelse(grepl("[bp]", sound), "labial", "")) %>%
mutate(POA = ifelse(grepl("[dts]", sound), "dental", POA)) %>%
mutate(POA = ifelse(grepl("ɬ", sound), "lateral", POA)) %>%
mutate(POA = ifelse(grepl("tʃ|dʒ", sound), "postalveolar", POA)) %>%
mutate(POA = ifelse(grepl("[kgɡ]", sound), "velar", POA)) %>%
mutate(POA = ifelse(grepl("[qɢ]", sound), "uvular", POA)) %>%
mutate(manner = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(manner = ifelse(grepl("[aiuoeɨ]", sound), "vowel", manner)) %>%
mutate(type = ifelse(grepl("[bdgɡɢ]", sound), "voiced", "voiceless")) %>%
mutate(type = ifelse(type == "vowel", "vowel", type)) %>%
mutate(type = ifelse(grepl("'", sound), "ejective", type)) %>%
mutate(geminate = ifelse(grepl("[:ː]", sound), "geminate", "")) %>%
mutate(labialization = ifelse(grepl("ʷ", sound), "labialized", "")) %>%
mutate(pharyngealization = ifelse(grepl("ˤ", sound), "pharyngealized", "")) ->
results_n
results <- read_tsv("result.tsv", col_names = FALSE)
colnames(results) <- c("speaker", "stimulus", "sound", "utterance", "s_parts", "duration", "start", "end")
results %>%
mutate(POA = ifelse(grepl("[bp]", sound), "labial", "")) %>%
mutate(POA = ifelse(grepl("[dts]", sound), "dental", POA)) %>%
mutate(POA = ifelse(grepl("ɬ", sound), "lateral", POA)) %>%
mutate(POA = ifelse(grepl("tʃ|dʒ", sound), "postalveolar", POA)) %>%
mutate(POA = ifelse(grepl("[kgɡ]", sound), "velar", POA)) %>%
mutate(POA = ifelse(grepl("[qɢ]", sound), "uvular", POA)) %>%
mutate(manner = ifelse(grepl("ts|tʃ|tɬ|dʒ|qχ", sound), "affricate", "plosive")) %>%
mutate(manner = ifelse(grepl("[aiuoeɨ]", sound), "vowel", manner)) %>%
mutate(type = ifelse(grepl("[bdgɡɢ]", sound), "voiced", "voiceless")) %>%
mutate(type = ifelse(type == "vowel", "vowel", type)) %>%
mutate(type = ifelse(grepl("'", sound), "ejective", type)) %>%
mutate(geminate = ifelse(grepl("[:ː]", sound), "geminate", "")) %>%
mutate(labialization = ifelse(grepl("ʷ", sound), "labialized", "")) %>%
mutate(pharyngealization = ifelse(grepl("ˤ", sound), "pharyngealized", "")) ->
results_n
View(results_n)
